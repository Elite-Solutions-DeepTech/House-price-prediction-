import numpy as np
import pandas as pd

from sklearn import datasets

datasets

df=pd.read_csv('/content/house_price_dataset_original_v2_cleaned.csv')

df

y=df.property_value

y

x=df[['land_sizex_sqm', 'house_size_sqm', 'no_of_rooms', 'no_of_bathrooms', 'large_living_room', 'parking_space', 'front_garden', 'swimming_pool', 'distance_to_school', 'wall_fence', 'house_age', 'water_front', 'distance_to_supermarket_km', 'crime_rate_index', 'room_size']]

x

print(x.shape)
print(y.shape)

df=pd.DataFrame(x)
df

from sklearn import model_selection
x_train,x_test,y_train,y_test=model_selection.train_test_split(x,y)

print(x_train.shape)
print(x_test.shape)
print(y_train.shape)
print(y_test.shape)

from sklearn.ensemble import RandomForestRegressor
alg1=RandomForestRegressor()

alg1.fit(x_train,y_train)

y_pred=alg1.predict(x_test)

accuracy=alg1.score(x_train,y_train)

print(accuracy)

from sklearn.metrics import accuracy_score
acc2=alg1.score(x,y)
print(acc2)

import matplotlib.pyplot as plt

plt.scatter(y_test,y_pred)
plt.show()

plt.plot(y_test,y_pred)

import matplotlib.pyplot as plt

plt.scatter(y_test,y_pred)
plt.plot([y_test.min(),y_test.max()],[y_test.min(),y_test.max()],color='grey',linewidth=3)
plt.show()

plt.figure(figsize=(10, 6))
plt.scatter(y_test, y_pred, color='Black', alpha=0.5)
plt.plot((y_test.min(), y_test.max()), (y_test.min(), y_test.max()), color='purple',linewidth=3)
plt.xlabel('House Features')
plt.ylabel('property value')
plt.title('Actual vs Predicted House Price Progression')
plt.grid(True)
plt.show()
